{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/moonsunghoon/Desktop/Source/react/project-one/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // const PostLink = props => (\n//     <li>\n//         <Link href=\"/post/[id]\" as={`/post/${props.id}`}>\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// )\n// export default function Index() {\n//     return (\n//         <Layout>\n//             <h1>My Blog</h1>\n//             <ul>\n//                 <PostLink id=\"Hello Next.js\" />\n//                 <PostLink id=\"Learn Next.js is awesome\" />\n//                 <PostLink id=\"Deploy apps with Zeit\" />\n//             </ul>\n//         </Layout>\n//     )\n// }\n\nvar Index = function Index(props) {\n  __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(Link, {\n      herf: \"/post/[id]\",\n      as: \"/post/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            show: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/moonsunghoon/Desktop/Source/react/project-one/pages/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACnB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACrB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,EAAE,kBAAWD,IAAI,CAACC,EAAhB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADJ,CADJ;AAKH,GANA,CADL,CAFJ;AAYH,CAbD;;AAeAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFR,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdS,UAAAA,GADc;AAAA;AAAA,2CAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAIpBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJoB,2CAMb;AACHT,YAAAA,IAAI,EAAEM,IAAI,CAACP,GAAL,CAAS,UAAAW,KAAK;AAAA,qBAAIA,KAAK,CAACV,IAAV;AAAA,aAAd;AADH,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/MyLayout'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n\n// const PostLink = props => (\n//     <li>\n//         <Link href=\"/post/[id]\" as={`/post/${props.id}`}>\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// )\n\n// export default function Index() {\n//     return (\n//         <Layout>\n//             <h1>My Blog</h1>\n//             <ul>\n//                 <PostLink id=\"Hello Next.js\" />\n//                 <PostLink id=\"Learn Next.js is awesome\" />\n//                 <PostLink id=\"Deploy apps with Zeit\" />\n//             </ul>\n//         </Layout>\n//     )\n// }\n\nconst Index = props => {\n    <Layout>\n        <h1>Batman TV Shows</h1>\n        <ul>\n            {props.shows.map(show => {\n                <li key={show.id}>\n                    <Link herf=\"/post/[id]\" as={`/post/${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            })}\n        </ul>\n    </Layout>\n}\n\nIndex.getInitialProps = async function () {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n    const data = await res.json()\n\n    console.log(`Show data fetched. Count: ${data.length}`)\n\n    return {\n        show: data.map(entry => entry.show)\n    }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}