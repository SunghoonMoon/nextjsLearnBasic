{"ast":null,"code":"var _jsxFileName = \"/Users/moonsunghoon/Desktop/Source/react/project-one/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _data, _data2;\n\n  var _useSWR = useSWR('/api/randomQuote', fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var author = (_data = data) === null || _data === void 0 ? void 0 : _data.author;\n  var quote = (_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.quote;\n  data = false;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Faild to fetch the quote.';\n  return __jsx(\"main\", {\n    className: \"jsx-1717259907\" + \" \" + \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1717259907\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-1717259907\" + \" \" + \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"- \", author), __jsx(_JSXStyle, {\n    id: \"1717259907\",\n    __self: this\n  }, \"main.jsx-1717259907{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-1717259907{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-1717259907{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb29uc3VuZ2hvb24vRGVza3RvcC9Tb3VyY2UvcmVhY3QvcHJvamVjdC1vbmUvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJ3QixBQUcrQixBQU1VLEFBTUcsVUFYUCxVQU1GLEdBTUEsR0FYSSxRQU1ILEdBTUEsT0FYRyxLQU1FLEdBTXhCLFVBWEEsT0FNQSIsImZpbGUiOiIvVXNlcnMvbW9vbnN1bmdob29uL0Rlc2t0b3AvU291cmNlL3JlYWN0L3Byb2plY3Qtb25lL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InXG5cbmZ1bmN0aW9uIGZldGNoZXIodXJsKSB7XG4gICAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcbiAgICBsZXQgeyBkYXRhLCBlcnJvciB9ID0gdXNlU1dSKCcvYXBpL3JhbmRvbVF1b3RlJywgZmV0Y2hlcilcbiAgICBjb25zdCBhdXRob3IgPSBkYXRhPy5hdXRob3JcbiAgICBsZXQgcXVvdGUgPSBkYXRhPy5xdW90ZVxuICAgIGRhdGEgPSBmYWxzZVxuICAgIGlmICghZGF0YSkgcXVvdGUgPSAnTG9hZGluZy4uLidcbiAgICBpZiAoZXJyb3IpIHF1b3RlID0gJ0ZhaWxkIHRvIGZldGNoIHRoZSBxdW90ZS4nXG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8bWFpbiBjbGFzc05hbWU9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVvdGVcIj57cXVvdGV9PC9kaXY+XG4gICAgICAgICAgICB7YXV0aG9yICYmIDxzcGFuIGNsYXNzTmFtZT1cImF1dGhvclwiPi0ge2F1dGhvcn08L3NwYW4+fVxuXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgbWFpbiB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogOTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMzAwcHggYXV0bztcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAucXVvdGUge1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNlMjQzZGU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5hdXRob3Ige1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvbWFpbj5cbiAgICApXG59Il19 */\\n/*@ sourceURL=/Users/moonsunghoon/Desktop/Source/react/project-one/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/moonsunghoon/Desktop/Source/react/project-one/pages/index.js"],"names":["useSWR","fetcher","url","fetch","then","r","json","Index","data","error","author","quote"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,gBACNP,MAAM,CAAC,kBAAD,EAAqBC,OAArB,CADA;AAAA,MACtBO,IADsB,WACtBA,IADsB;AAAA,MAChBC,KADgB,WAChBA,KADgB;;AAE5B,MAAMC,MAAM,YAAGF,IAAH,0CAAG,MAAME,MAArB;AACA,MAAIC,KAAK,aAAGH,IAAH,2CAAG,OAAMG,KAAlB;AACAH,EAAAA,IAAI,GAAG,KAAP;AACA,MAAI,CAACA,IAAL,EAAWG,KAAK,GAAG,YAAR;AACX,MAAIF,KAAJ,EAAWE,KAAK,GAAG,2BAAR;AAEX,SACI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADJ,EAEKD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFf;AAAA;AAAA;AAAA,+1EADJ;AA0BH","sourcesContent":["import useSWR from 'swr'\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json())\n}\n\nexport default function Index() {\n    let { data, error } = useSWR('/api/randomQuote', fetcher)\n    const author = data?.author\n    let quote = data?.quote\n    data = false\n    if (!data) quote = 'Loading...'\n    if (error) quote = 'Faild to fetch the quote.'\n\n    return (\n        <main className=\"center\">\n            <div className=\"quote\">{quote}</div>\n            {author && <span className=\"author\">- {author}</span>}\n\n            <style jsx>{`\n                main {\n                    width: 90%;\n                    max-width: 900px;\n                    margin: 300px auto;\n                    text-align: center;\n                }\n                .quote {\n                    font-family: cursive;\n                    color: #e243de;\n                    font-size: 24px;\n                    padding-bottom: 10px;\n                }\n                .author {\n                    font-family: sans-serif;\n                    color: #559834;\n                    font-size: 20px;\n                }\n            `}</style>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}